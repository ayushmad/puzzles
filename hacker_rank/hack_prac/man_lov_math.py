import sys

local_table =  [[(1, 1), (0, 1), (4, 1)],
                [(1, 2), (2, 1)],
                [(1, 1), (0, 1), (2, 1)],
                [(1, 1), (8, 1), (2, 1)],
                [(1, 1), (3, 1), (6, 1)],
                [(1, 1), (4, 2)],
                [(1, 1), (2, 1), (5, 1)],
                [(1, 1), (0, 1), (6, 1)],
                [(1, 1), (8, 1), (6, 1)],
                [(1, 1), (7, 1), (6, 1)],
                [(1, 1), (8, 1), (4, 1)],
                [(1, 1), (9, 1), (2, 1)],
                [(0, 2), (2, 1)],
                [(0, 1), (2, 1), (8, 1)],
                [(1, 1), (2, 1), (6, 1)],
                [(2, 2), (4, 1)],
                [(3, 1), (2, 2)],
                [(0, 1), (2, 1), (4, 1)],
                [(8, 1), (2, 1), (4, 1)],
                [(2, 1), (5, 1), (6, 1)],
                [(2, 1), (4, 1), (6, 1)],
                [(2, 2), (7, 1)],
                [(8, 1), (2, 1), (0, 1)],
                [(8, 2), (2, 1)],
                [(9, 1), (2, 1), (6, 1)],
                [(0, 1), (3, 1), (4, 1)],
                [(1, 1), (3, 1), (2, 1)],
                [(0, 1), (3, 1), (2, 1)],
                [(8, 1), (3, 1), (2, 1)],
                [(3, 2), (6, 1)],
                [(3, 1), (4, 2)],
                [(3, 1), (2, 1), (5, 1)],
                [(0, 1), (3, 1), (6, 1)],
                [(8, 1), (3, 1), (6, 1)],
                [(3, 1), (7, 1), (6, 1)],
                [(8, 1), (3, 1), (4, 1)],
                [(9, 1), (3, 1), (2, 1)],
                [(0, 2), (4, 1)],
                [(0, 1), (4, 1), (8, 1)],
                [(1, 1), (4, 1), (6, 1)],
                [(2, 1), (4, 2)],
                [(3, 1), (2, 1), (4, 1)],
                [(0, 1), (4, 2)],
                [(8, 1), (4, 2)],
                [(5, 1), (4, 1), (6, 1)],
                [(4, 2), (6, 1)],
                [(2, 1), (4, 1), (7, 1)],
                [(8, 1), (4, 1), (0, 1)],
                [(8, 2), (4, 1)],
                [(9, 1), (4, 1), (6, 1)],
                [(0, 1), (5, 1), (4, 1)],
                [(1, 1), (2, 1), (5, 1)],
                [(0, 1), (2, 1), (5, 1)],
                [(8, 1), (2, 1), (5, 1)],
                [(3, 1), (5, 1), (6, 1)],
                [(5, 1), (4, 2)],
                [(2, 1), (5, 2)],
                [(0, 1), (5, 1), (6, 1)],
                [(8, 1), (5, 1), (6, 1)],
                [(5, 1), (7, 1), (6, 1)],
                [(8, 1), (5, 1), (4, 1)],
                [(9, 1), (2, 1), (5, 1)],
                [(0, 2), (6, 1)],
                [(0, 1), (8, 1), (6, 1)],
                [(1, 1), (6, 2)],
                [(2, 1), (4, 1), (6, 1)],
                [(3, 1), (2, 1), (6, 1)],
                [(0, 1), (4, 1), (6, 1)],
                [(8, 1), (4, 1), (6, 1)],
                [(5, 1), (6, 2)],
                [(4, 1), (6, 2)],
                [(2, 1), (7, 1), (6, 1)],
                [(8, 1), (0, 1), (6, 1)],
                [(8, 2), (6, 1)],
                [(9, 1), (6, 2)],
                [(0, 1), (4, 1), (7, 1)],
                [(1, 1), (2, 1), (7, 1)],
                [(0, 1), (2, 1), (7, 1)],
                [(8, 1), (2, 1), (7, 1)],
                [(3, 1), (7, 1), (6, 1)],
                [(4, 2), (7, 1)],
                [(2, 1), (5, 1), (7, 1)],
                [(0, 1), (7, 1), (6, 1)],
                [(8, 1), (7, 1), (6, 1)],
                [(7, 2), (6, 1)],
                [(8, 1), (4, 1), (7, 1)],
                [(9, 1), (2, 1), (7, 1)],
                [(8, 1), (0, 2)],
                [(8, 2), (0, 1)],
                [(1, 1), (8, 1), (6, 1)],
                [(8, 1), (2, 1), (4, 1)],
                [(8, 1), (3, 1), (2, 1)],
                [(8, 1), (4, 1), (0, 1)],
                [(8, 2), (4, 1)],
                [(8, 1), (5, 1), (6, 1)],
                [(8, 1), (4, 1), (6, 1)],
                [(8, 1), (2, 1), (7, 1)],
                [(8, 2), (0, 1)],
                [(8, 3)],
                [(9, 1), (8, 1), (6, 1)],
                [(9, 1), (0, 1), (4, 1)],
                [(9, 1), (1, 1), (2, 1)],
                [(9, 1), (0, 1), (2, 1)],
                [(9, 1), (8, 1), (2, 1)],
                [(9, 1), (3, 1), (6, 1)],
                [(9, 1), (4, 2)],
                [(9, 1), (2, 1), (5, 1)],
                [(9, 1), (0, 1), (6, 1)],
                [(9, 1), (8, 1), (6, 1)],
                [(9, 1), (7, 1), (6, 1)],
                [(9, 1), (8, 1), (4, 1)],
                [(9, 2), (2, 1)],
                [(0,3)]];


def small_table(number):
    if number %8 == 0:
        return "YES";
    number = str(number);
    number = number[::-1];
    if int(number) % 8 == 0:
        return "YES";
    return "NO";


def large_table(number):
    global lookup_table;
    num_str = str(number);
    num_hash = {};
    for num in num_str:
        if not num_hash.has_key(num):
            num_hash[int(num)] = 0;
        num_hash[int(num)] += 1;
    for look_num in local_table:
        number_flag = True;
        for entry in look_num:
            if not num_hash.has_key(entry[0]):
                number_flag = False;
                break;
            if num_hash[entry[0]] > entry[1]:
                number_flag = False;
                break;
        if number_flag:
            return "YES";
    return "NO";


inp_stream = sys.stdin;
#inp_stream = open('test.txt', 'r');
test_case_count = int(inp_stream.readline());
while test_case_count > 0:
    num = int(inp_stream.readline());
    if num < 10:
        if num % 8 == 0:
            print "YES";
        else:
            print "NO";
    elif num < 100:
        print small_table(num);
    else:
        print large_table(num);
    test_case_count -= 1;
